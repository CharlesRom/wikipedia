define(["modules/types/client_interaction/code_editor/controller","src/util/api","src/util/debug"],function(CodeEditor,API,Debug){function Controller(){}function ScriptExecutor(a){this.controller=a,this.context=new ScriptExecutorContext(this),this.outputVariable={}}function ScriptExecutorContext(a){this.__executor__=a}function getRequireStart(a){var b='( [ "src/util/api"',c="function( API";if(a)for(var d=0;d<a.length;d++){var e=a[d];e.lib&&(b+=', "'+e.lib+'"',c+=", "+(e.alias||"required_anonymous_"+d))}return b+" ], "+c+" ){\n"}function evaluate(__s__,__c__,__e__,Controller,getRequireStart,ScriptExecutorContext,ScriptExecutor,CodeEditor,methods,strMethods,mappedMethods){eval(__s__)}Controller.prototype=Object.create(CodeEditor.prototype),Controller.prototype.moduleInformation={name:"Code executor",description:"Write code that can be executed on input variable, action or just the push of a button",author:"MichaÃ«l Zasso",date:"12.01.2015",license:"MIT"},Controller.prototype.references={inputValue:{label:"Input value"},outputValue:{label:"Output value"}},Controller.prototype.events={onScriptEnded:{label:"Code execution ended",refVariable:["outputValue"]}},Controller.prototype.variablesIn=["inputValue"],Controller.prototype.actionsIn.execute="Execute the code",Controller.prototype.configurationStructure=function(){return{groups:{group:{options:{type:"list"},fields:{display:{type:"checkbox",title:"Display",options:{editor:"Code editor",buttons:"Buttons"},"default":["editor","buttons"]},script:{type:"jscode",title:"Code","default":""}}},libs:{options:{type:"table",multiple:!0,title:"Required libraries"},fields:{lib:{type:"text",title:"url"},alias:{type:"text",title:"alias"}}},buttons:{options:{type:"table",multiple:!0,title:"Buttons"},fields:{name:{type:"text",title:"Name","default":"button1"},label:{type:"text",title:"Label","default":"Execute"}}}}}},Controller.prototype.configAliases={script:["groups","group",0,"script",0],display:["groups","group",0,"display",0],libs:["groups","libs",0],buttons:["groups","buttons",0]},Controller.prototype.onButtonClick=function(a){var b=this.getExecutor();b.setButton(a),b.execute()},Controller.prototype.onVariableIn=function(){var a=this.getExecutor();a.setVariable(),a.execute()},Controller.prototype.onActionIn=function(a,b){var c=this.getExecutor();c.setAction(a,b),c.execute()},Controller.prototype.getExecutor=function(){return new ScriptExecutor(this)},Controller.prototype.initImpl=function(){var a=this.module.getConfiguration("libs");this.require={start:"require"+getRequireStart(a),end:"\n});"},this.resolveReady()},ScriptExecutor.prototype.setButton=function(a){this.context.event="button",this.context.button=a},ScriptExecutor.prototype.setVariable=function(){this.context.event="variable"},ScriptExecutor.prototype.setAction=function(a,b){this.context.event="action",this.context.action={name:a,value:b}},ScriptExecutor.prototype.doVariable=function(a,b){this.outputVariable[a]=b};var methods=["getVariables","getEvent","getButton","get","getDefined","set","getAction","sendAction","setAsync","done"],strMethods=methods.join(","),mappedMethods=methods.map(function(a){return"__c__."+a+".bind(__c__)"}).join(",");return ScriptExecutor.prototype.execute=function(){var a=this.controller.module.view._input,b={},c=0;for(var d in a)null!=a[d]&&(c++,b[d]=a[d]);this.context.variables=b,this.context.defined=c,this._done=Promise.resolve();var e=this.controller.require.start+"try {\n(function ("+strMethods+", Debug) {\n"+this.controller.module.view._code+"\n}).call(__c__,"+mappedMethods+');\n} catch(e) {Debug.error("Code executor error", e)}\n__e__.setOutput();\n'+this.controller.require.end;evaluate(e,this.context,this)},ScriptExecutor.prototype.setOutput=function(){var a=this;this._done.then(function(){a.controller.lastData=a.outputVariable,a.controller.createDataFromEvent("onScriptEnded","outputValue",a.outputVariable)},function(a){Debug.error("Code executor error",a)})},ScriptExecutor.prototype.async=function(){if(!this._async){this._async=!0;var a=this;this._done=new Promise(function(b,c){a.done=function(a){a instanceof Error?c(a):b(a)}})}},ScriptExecutor.prototype.done=function(){},ScriptExecutorContext.prototype={getVariables:function(){return this.variables},getEvent:function(){return this.event},getButton:function(){return this.button},get:function(a){return this.variables[a]},getDefined:function(){return this.defined},set:function(a,b){this.__executor__.doVariable(a,b)},getAction:function(){return this.action},sendAction:function(a,b){API.doAction(a,b)},setAsync:function(){this.__executor__.async()},done:function(){this.__executor__.done()}},Controller});